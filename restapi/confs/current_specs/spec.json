{
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "Credentials": {
      "properties": {
        "password": {
          "description": "password coupling in credentials for your username",
          "type": "string"
        },
        "username": {
          "description": "your registered username",
          "type": "string"
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "FileDelete": {
      "properties": {
        "resource": {
          "type": "string"
        }
      }
    },
    "FileUpdate": {
      "properties": {
        "newname": {
          "description": "iRODS resource",
          "type": "string"
        },
        "resource": {
          "type": "string"
        }
      },
      "required": [
        "newname"
      ]
    },
    "ProfileUpdate": {
      "properties": {
        "newpassword": {
          "description": "the new password to associate to your profile",
          "type": "string"
        }
      },
      "required": [
        "newpassword"
      ]
    }
  },
  "info": {
    "title": "EUDAT-B2STAGE HTTP-API server",
    "version": "v0.2-alpha"
  },
  "paths": {
    "/api/admin": {
      "get": {
        "responses": {
          "200": {
            "description": "Current user is classified as admin"
          },
          "401": {
            "description": "Invalid credentials/token provided"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Administration privilege verification",
        "tags": [
          "base",
          "helpers"
        ]
      }
    },
    "/api/internal": {
      "get": {
        "responses": {
          "200": {
            "description": "Current user is classified as internal"
          },
          "401": {
            "description": "Invalid credentials/token provided"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Role authentication test with internals",
        "tags": [
          "base",
          "helpers"
        ]
      }
    },
    "/api/specs": {
      "get": {
        "responses": {
          "200": {
            "description": "a JSON with all endpoint defined with Swagger standards"
          }
        },
        "summary": "Specifications output throught Swagger (open API) standards",
        "tags": [
          "base",
          "specifications"
        ]
      }
    },
    "/api/status": {
      "get": {
        "description": "You may use this URI to monitor network or server problems.",
        "responses": {
          "200": {
            "description": "Server is alive!"
          }
        },
        "summary": "Check if the API server is currently reachable",
        "tags": [
          "base",
          "helpers"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "description": "Normal credentials (username and password) login endpoint",
        "parameters": [
          {
            "in": "body",
            "name": "credentials",
            "schema": {
              "$ref": "#/definitions/Credentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Credentials are valid",
            "examples": {
              "application/json": {
                "Meta": {
                  "data_type": "string",
                  "elements": 1,
                  "errors": 0,
                  "status": 200
                },
                "Response": {
                  "data": {
                    "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9"
                  },
                  "errors": {
                    "null": null
                  }
                }
              }
            }
          }
        },
        "summary": "Login with basic credentials",
        "tags": [
          "base",
          "authentication"
        ]
      }
    },
    "/auth/logout": {
      "get": {
        "description": "Invalidate current registered token",
        "responses": {
          "200": {
            "description": "Token correctly removed"
          },
          "401": {
            "description": "Invalid credentials/token provided"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Logout from current credentials",
        "tags": [
          "base",
          "authentication"
        ]
      }
    },
    "/auth/profile": {
      "get": {
        "responses": {
          "200": {
            "description": "Dictionary with all profile attributes"
          },
          "401": {
            "description": "Invalid credentials/token provided"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "List profile attributes",
        "tags": [
          "base",
          "profiles"
        ]
      }
    },
    "/auth/profile/{uuid}": {
      "put": {
        "parameters": [
          {
            "in": "body",
            "name": "credentials",
            "schema": {
              "$ref": "#/definitions/ProfileUpdate"
            }
          },
          {
            "description": "uuid associated to the proile you want to access",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Updated has been successful"
          },
          "401": {
            "description": "Invalid credentials/token provided"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update profile attributes",
        "tags": [
          "base",
          "profiles"
        ]
      }
    },
    "/auth/tokens": {
      "delete": {
        "description": "Note: allowed only for testing",
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "uuid associated to the token you want to select",
            "in": "path",
            "name": "token_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Tokens have been erased"
          },
          "401": {
            "description": "Invalid credentials/token provided"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Remove all tokens emitted for logged user",
        "tags": [
          "base",
          "open_sessions"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "uuid associated to the token you want to select",
            "in": "path",
            "name": "token_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tokens"
          },
          "401": {
            "description": "Invalid credentials/token provided"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Show all tokens emitted for logged user",
        "tags": [
          "base",
          "open_sessions"
        ]
      }
    },
    "/auth/tokens/{token_id}": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "uuid associated to the token you want to select",
            "in": "path",
            "name": "token_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Token has been invalidated"
          },
          "401": {
            "description": "Invalid credentials/token provided"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Remove specified token and make it invalid from now on",
        "tags": [
          "base",
          "open_sessions"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "type": "string"
          },
          {
            "description": "uuid associated to the token you want to select",
            "in": "path",
            "name": "token_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Details on the specified token"
          },
          "401": {
            "description": "Invalid credentials/token provided"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Show specified token if available for logged user",
        "tags": [
          "base",
          "open_sessions"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "security": [
    {
      "Bearer": []
    }
  ],
  "securityDefinitions": {
    "Bearer": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "description": "all endpoints associated to EUDAT services",
      "name": "eudat"
    },
    {
      "description": "upload, list and download objects",
      "name": "namespace"
    },
    {
      "description": "request and refresh authorization from the B2ACCESS service",
      "name": "b2access"
    },
    {
      "description": "JSON with SWAGGER standards for any REST client",
      "name": "specifications"
    },
    {
      "description": "endpoints for base operations",
      "name": "base"
    },
    {
      "description": "tools for checking status and privileges",
      "name": "helpers"
    },
    {
      "description": "log in and out of the REST API",
      "name": "authentication"
    },
    {
      "description": "set and view profile for current credentials",
      "name": "profiles"
    },
    {
      "description": "manage authorized sessions",
      "name": "open_sessions"
    }
  ]
}
